// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/admins": {
            "get": {
                "description": "Gets a list of all admins.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admins"
                ],
                "summary": "Get all admins",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.AdminResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new admin with the provided data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admins"
                ],
                "summary": "Create a new admin",
                "parameters": [
                    {
                        "description": "Admin data",
                        "name": "admin",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateAdminRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.AdminResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/admins/{id}": {
            "get": {
                "description": "Gets an admin by their ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admins"
                ],
                "summary": "Get admin by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Admin ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.AdminResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid admin ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Admin not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Updates an admin\\'s data.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admins"
                ],
                "summary": "Update admin",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Admin ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated admin data",
                        "name": "admin",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateAdminRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Admin updated successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid admin ID or request body",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Admin not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes an admin by their ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admins"
                ],
                "summary": "Delete admin",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Admin ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Admin deleted successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid admin ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Admin not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/clients": {
            "get": {
                "description": "Gets a list of all clients.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Clients"
                ],
                "summary": "Get all clients",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.ClientResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new client with the provided data.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Clients"
                ],
                "summary": "Create a new client",
                "parameters": [
                    {
                        "description": "Client data",
                        "name": "client",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateClientRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.ClientResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/clients/{clientID}/credit-accounts": {
            "get": {
                "description": "Retrieves all credit accounts associated with a client.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CreditAccounts"
                ],
                "summary": "Get credit accounts by client ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Client ID",
                        "name": "clientID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.CreditAccountResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/clients/{id}": {
            "get": {
                "description": "Gets a client by its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Clients"
                ],
                "summary": "Get client by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Client ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ClientResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid client ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Client not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Updates a client's data.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Clients"
                ],
                "summary": "Update client",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Client ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated client data",
                        "name": "client",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateClientRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Client updated successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid client ID or request body",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Client not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a client by its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Clients"
                ],
                "summary": "Delete client",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Client ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Client deleted successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid client ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Client not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/credit-accounts": {
            "post": {
                "description": "Creates a new credit account for a client.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CreditAccounts"
                ],
                "summary": "Create a new credit account",
                "parameters": [
                    {
                        "description": "Credit account details",
                        "name": "creditAccount",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateCreditAccountRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.CreditAccountResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/credit-accounts/{creditAccountID}/clients/{clientID}": {
            "put": {
                "description": "Assigns an existing credit account to a client.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CreditAccounts"
                ],
                "summary": "Assign credit account to client",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Credit Account ID",
                        "name": "creditAccountID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Client ID",
                        "name": "clientID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.CreditAccountResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/credit-accounts/{creditAccountID}/installments": {
            "get": {
                "description": "Retrieves all installments for a specific credit account.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Installments"
                ],
                "summary": "Get installments by credit account ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Credit Account ID",
                        "name": "creditAccountID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.InstallmentResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/credit-accounts/{creditAccountID}/installments/overdue": {
            "get": {
                "description": "Retrieves all overdue installments for a specific credit account.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Installments"
                ],
                "summary": "Get overdue installments by credit account ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Credit Account ID",
                        "name": "creditAccountID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.InstallmentResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/credit-accounts/{creditAccountID}/late-fees": {
            "get": {
                "description": "Retrieves all late fees for a specific credit account.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "LateFees"
                ],
                "summary": "Get late fees by credit account ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Credit Account ID",
                        "name": "creditAccountID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.LateFeeResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/credit-accounts/{creditAccountID}/payments": {
            "post": {
                "description": "Processes a payment transaction on a credit account.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CreditAccounts"
                ],
                "summary": "Process a payment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Credit Account ID",
                        "name": "creditAccountID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Payment details",
                        "name": "payment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateTransactionRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Payment processed successfully"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/credit-accounts/{creditAccountID}/purchases": {
            "post": {
                "description": "Processes a purchase transaction on a credit account.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CreditAccounts"
                ],
                "summary": "Process a purchase",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Credit Account ID",
                        "name": "creditAccountID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Purchase details",
                        "name": "purchase",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateTransactionRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Purchase processed successfully"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/credit-accounts/{creditAccountID}/transactions": {
            "get": {
                "description": "Get all transactions for a specific credit account.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "summary": "Get Transaction by Credit Account ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Credit Account ID",
                        "name": "creditAccountID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.TransactionResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/credit-accounts/{id}": {
            "get": {
                "description": "Retrieves a credit account by its ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CreditAccounts"
                ],
                "summary": "Get credit account by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Credit Account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.CreditAccountResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates an existing credit account by its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CreditAccounts"
                ],
                "summary": "Update a credit account",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Credit Account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated credit account details",
                        "name": "creditAccount",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateCreditAccountRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.CreditAccountResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a credit account by its ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CreditAccounts"
                ],
                "summary": "Delete a credit account",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Credit Account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/credit-requests": {
            "post": {
                "description": "Creates a new credit request for a client.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CreditRequests"
                ],
                "summary": "Create a credit request",
                "parameters": [
                    {
                        "description": "Credit request details",
                        "name": "creditRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateCreditRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.CreditRequestResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/credit-requests/{id}": {
            "get": {
                "description": "Retrieves a credit request by its ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CreditRequests"
                ],
                "summary": "Get credit request by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Credit Request ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.CreditRequestResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/credit-requests/{id}/approve": {
            "put": {
                "description": "Approves a pending credit request and creates a credit account.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CreditRequests"
                ],
                "summary": "Approve credit request",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Credit Request ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.CreditAccountResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/credit-requests/{id}/reject": {
            "put": {
                "description": "Rejects a pending credit request.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CreditRequests"
                ],
                "summary": "Reject credit request",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Credit Request ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Credit request rejected successfully"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/establishments": {
            "get": {
                "description": "Retrieve a list of all establishments.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Establishments"
                ],
                "summary": "Get all establishments",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.EstablishmentResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new establishment with admin details.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Establishments"
                ],
                "summary": "Create a new establishment",
                "parameters": [
                    {
                        "description": "Establishment details",
                        "name": "establishment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateEstablishmentRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.EstablishmentResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/establishments/{establishmentID}/credit-accounts": {
            "get": {
                "description": "Retrieves all credit accounts associated with an establishment.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CreditAccounts"
                ],
                "summary": "Get credit accounts by establishment ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Establishment ID",
                        "name": "establishmentID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.CreditAccountResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/establishments/{establishmentID}/credit-accounts/apply-interest": {
            "post": {
                "description": "Applies interest to all eligible credit accounts within an establishment.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CreditAccounts"
                ],
                "summary": "Apply interest to all accounts",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Establishment ID",
                        "name": "establishmentID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Interest applied successfully"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/establishments/{establishmentID}/credit-accounts/apply-late-fees": {
            "post": {
                "description": "Applies late fees to all eligible credit accounts within an establishment.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CreditAccounts"
                ],
                "summary": "Apply late fees to all accounts",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Establishment ID",
                        "name": "establishmentID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Late fees applied successfully"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/establishments/{establishmentID}/credit-accounts/debt-summary": {
            "get": {
                "description": "Retrieves a summary of debts owed to an establishment.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CreditAccounts"
                ],
                "summary": "Get admin debt summary",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Establishment ID",
                        "name": "establishmentID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.AdminDebtSummary"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/establishments/{establishmentID}/credit-requests/pending": {
            "get": {
                "description": "Retrieves all pending credit requests for an establishment.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CreditRequests"
                ],
                "summary": "Get pending credit requests",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Establishment ID",
                        "name": "establishmentID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.CreditRequestResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/establishments/{establishmentID}/late-fee-rules": {
            "get": {
                "description": "Retrieves all late fee rules for a specific establishment.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "LateFeeRules"
                ],
                "summary": "Get late fee rules by establishment ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Establishment ID",
                        "name": "establishmentID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.LateFeeRuleResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/establishments/{establishment_id}/products": {
            "get": {
                "description": "Retrieve products associated with a specific establishment ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Get products by establishment ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Establishment ID",
                        "name": "establishment_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.ProductResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/establishments/{id}": {
            "get": {
                "description": "Retrieve an establishment by its ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Establishments"
                ],
                "summary": "Get an establishment by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Establishment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.EstablishmentResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing establishment by ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Establishments"
                ],
                "summary": "Update an existing establishment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Establishment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Establishment details",
                        "name": "establishment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateEstablishmentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.EstablishmentResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an establishment by ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Establishments"
                ],
                "summary": "Delete an establishment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Establishment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/establishments/{id}/clients/{client_id}": {
            "put": {
                "description": "Associate a client with an establishment.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Establishments"
                ],
                "summary": "Add a client to an establishment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Establishment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Client ID",
                        "name": "client_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/establishments/{id}/products": {
            "post": {
                "description": "Associate a list of products with an establishment.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Establishments"
                ],
                "summary": "Register products for an establishment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Establishment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "List of product IDs",
                        "name": "products",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/installments": {
            "post": {
                "description": "Creates a new installment for a credit account.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Installments"
                ],
                "summary": "Create a new installment",
                "parameters": [
                    {
                        "description": "Installment details",
                        "name": "installment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateInstallmentRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.InstallmentResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/installments/{id}": {
            "get": {
                "description": "Retrieves an installment by its ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Installments"
                ],
                "summary": "Get installment by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Installment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.InstallmentResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates an existing installment by its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Installments"
                ],
                "summary": "Update an installment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Installment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated installment details",
                        "name": "installment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateInstallmentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.InstallmentResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes an installment by its ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Installments"
                ],
                "summary": "Delete an installment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Installment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/late-fee-rules": {
            "get": {
                "description": "Retrieves all late fee rules.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "LateFeeRules"
                ],
                "summary": "Get all late fee rules",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.LateFeeRuleResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new late fee rule for an establishment (or globally).",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "LateFeeRules"
                ],
                "summary": "Create a late fee rule",
                "parameters": [
                    {
                        "description": "Late fee rule details",
                        "name": "lateFeeRule",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateLateFeeRuleRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.LateFeeRuleResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/late-fee-rules/{id}": {
            "get": {
                "description": "Retrieves a late fee rule by its ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "LateFeeRules"
                ],
                "summary": "Get late fee rule by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Late Fee Rule ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.LateFeeRuleResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates an existing late fee rule by its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "LateFeeRules"
                ],
                "summary": "Update a late fee rule",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Late Fee Rule ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated late fee rule details",
                        "name": "lateFeeRule",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateLateFeeRuleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.LateFeeRuleResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a late fee rule by its ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "LateFeeRules"
                ],
                "summary": "Delete a late fee rule",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Late Fee Rule ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/late-fees": {
            "post": {
                "description": "Creates a new late fee for a credit account.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "LateFees"
                ],
                "summary": "Create a late fee",
                "parameters": [
                    {
                        "description": "Late fee details",
                        "name": "lateFee",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateLateFeeRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.LateFeeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/late-fees/{id}": {
            "get": {
                "description": "Retrieves a late fee by its ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "LateFees"
                ],
                "summary": "Get late fee by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Late Fee ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.LateFeeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates an existing late fee by its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "LateFees"
                ],
                "summary": "Update a late fee",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Late Fee ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated late fee details",
                        "name": "lateFee",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateLateFeeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.LateFeeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a late fee by its ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "LateFees"
                ],
                "summary": "Delete a late fee",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Late Fee ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/login": {
            "post": {
                "description": "Logs in with user credentials",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "User credentials",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.AuthResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/products": {
            "get": {
                "description": "Retrieve a list of all products.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Get all products",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.ProductResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new product associated with an establishment.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Create a new product",
                "parameters": [
                    {
                        "description": "Product details",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateProductRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.ProductResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/products/{id}": {
            "get": {
                "description": "Retrieve a product by its ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Get a product by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Product ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ProductResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing product by ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Update an existing product",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Product ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Product details",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateProductRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ProductResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a product by ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Delete a product",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Product ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/refresh": {
            "post": {
                "description": "Generates a new access token from a valid refresh token.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Refresh access token",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {refreshToken}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.AuthResponse"
                        }
                    },
                    "401": {
                        "description": "Invalid or expired refresh token.",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/register": {
            "post": {
                "description": "Registers a new user with the provided data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "User data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/reset-password": {
            "post": {
                "description": "Resets the password for the authenticated user, requiring the current password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Reset password",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {accessToken}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Reset password request",
                        "name": "reset",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.ResetPasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/transactions": {
            "post": {
                "description": "Create a new transaction for a credit account.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "summary": "Create Transaction",
                "parameters": [
                    {
                        "description": "Transaction Data",
                        "name": "transaction",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateTransactionRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.TransactionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/transactions/{id}": {
            "get": {
                "description": "Get a transaction by its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "summary": "Get Transaction by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Transaction ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.TransactionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a transaction by its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "summary": "Update Transaction",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Transaction ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Transaction Data",
                        "name": "transaction",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateTransactionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.TransactionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a transaction by its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "summary": "Delete Transaction",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Transaction ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/response.TransactionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "entities.CreditRequestStatus": {
            "type": "string",
            "enum": [
                "PENDING",
                "APPROVED",
                "REJECTED"
            ],
            "x-enum-varnames": [
                "Pending",
                "Approved",
                "Rejected"
            ]
        },
        "entities.ProductCategory": {
            "type": "string",
            "enum": [
                "Grocery",
                "FruitAndVeg",
                "Meat",
                "Poultry",
                "Seafood",
                "Bakery",
                "Liquor",
                "GeneralStore"
            ],
            "x-enum-varnames": [
                "ProductCategoryGrocery",
                "ProductCategoryFruitAndVeg",
                "ProductCategoryMeat",
                "ProductCategoryPoultry",
                "ProductCategorySeafood",
                "ProductCategoryBakery",
                "ProductCategoryLiquor",
                "ProductCategoryGeneralStore"
            ]
        },
        "enums.CreditType": {
            "type": "string",
            "enum": [
                "SHORT_TERM",
                "LONG_TERM"
            ],
            "x-enum-varnames": [
                "ShortTerm",
                "LongTerm"
            ]
        },
        "enums.FeeType": {
            "type": "string",
            "enum": [
                "PERCENTAGE",
                "FIXED_AMOUNT"
            ],
            "x-enum-varnames": [
                "Percentage",
                "FixedAmount"
            ]
        },
        "enums.InstallmentStatus": {
            "type": "string",
            "enum": [
                "PENDING",
                "PAID",
                "OVERDUE"
            ],
            "x-enum-varnames": [
                "Pending",
                "Paid",
                "Overdue"
            ]
        },
        "enums.InterestType": {
            "type": "string",
            "enum": [
                "NOMINAL",
                "EFFECTIVE"
            ],
            "x-enum-varnames": [
                "Nominal",
                "Effective"
            ]
        },
        "enums.RecipientType": {
            "type": "string",
            "enum": [
                "CLIENT",
                "ESTABLISHMENT",
                "ADMIN"
            ],
            "x-enum-varnames": [
                "RolClient",
                "RolEstablishment",
                "RolAdmin"
            ]
        },
        "enums.TransactionType": {
            "type": "string",
            "enum": [
                "PURCHASE",
                "PAYMENT",
                "INTEREST_ACCRUAL",
                "LATE_FEE_APPLIED",
                "CREDIT_LIMIT_INCREASE",
                "CREDIT_LIMIT_DECREASE",
                "EARLY_PAYMENT",
                "ACCOUNT_BLOCKED",
                "ACCOUNT_UNBLOCKED"
            ],
            "x-enum-varnames": [
                "Purchase",
                "Payment",
                "InterestAccrual",
                "LateFeeApplied",
                "CreditLimitIncrease",
                "CreditLimitDecrease",
                "EarlyPayment",
                "AccountBlocked",
                "AccountUnblocked"
            ]
        },
        "request.CreateAdminRequest": {
            "type": "object",
            "required": [
                "establishment_id",
                "user_id"
            ],
            "properties": {
                "establishment_id": {
                    "type": "integer"
                },
                "is_active": {
                    "type": "boolean"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "request.CreateClientRequest": {
            "type": "object",
            "required": [
                "credit_limit",
                "email",
                "phone",
                "user_id"
            ],
            "properties": {
                "credit_limit": {
                    "type": "number",
                    "minimum": 0
                },
                "email": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "phone": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "request.CreateCreditAccountRequest": {
            "type": "object",
            "required": [
                "client_id",
                "credit_limit",
                "credit_type",
                "establishment_id",
                "interest_rate",
                "interest_type",
                "monthly_due_date"
            ],
            "properties": {
                "client_id": {
                    "type": "integer"
                },
                "credit_limit": {
                    "type": "number"
                },
                "credit_type": {
                    "$ref": "#/definitions/enums.CreditType"
                },
                "establishment_id": {
                    "type": "integer"
                },
                "grace_period": {
                    "description": "Optional",
                    "type": "integer",
                    "minimum": 0
                },
                "interest_rate": {
                    "type": "number"
                },
                "interest_type": {
                    "$ref": "#/definitions/enums.InterestType"
                },
                "late_fee_rule_id": {
                    "description": "Optional",
                    "type": "integer"
                },
                "monthly_due_date": {
                    "type": "integer",
                    "maximum": 31,
                    "minimum": 1
                }
            }
        },
        "request.CreateCreditRequest": {
            "type": "object",
            "required": [
                "client_id",
                "credit_type",
                "establishment_id",
                "interest_rate",
                "interest_type",
                "monthly_due_date",
                "requested_credit_limit"
            ],
            "properties": {
                "client_id": {
                    "type": "integer"
                },
                "credit_type": {
                    "$ref": "#/definitions/enums.CreditType"
                },
                "establishment_id": {
                    "type": "integer"
                },
                "grace_period": {
                    "description": "Optional",
                    "type": "integer",
                    "minimum": 0
                },
                "interest_rate": {
                    "type": "number"
                },
                "interest_type": {
                    "$ref": "#/definitions/enums.InterestType"
                },
                "monthly_due_date": {
                    "type": "integer",
                    "maximum": 31,
                    "minimum": 1
                },
                "requested_credit_limit": {
                    "type": "number"
                }
            }
        },
        "request.CreateEstablishmentRequest": {
            "type": "object",
            "required": [
                "address",
                "admin_id",
                "name",
                "phone",
                "ruc"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "admin_id": {
                    "type": "integer"
                },
                "is_active": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "ruc": {
                    "type": "string"
                }
            }
        },
        "request.CreateInstallmentRequest": {
            "type": "object",
            "required": [
                "amount",
                "credit_account_id",
                "due_date",
                "status"
            ],
            "properties": {
                "amount": {
                    "type": "number"
                },
                "credit_account_id": {
                    "type": "integer"
                },
                "due_date": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/enums.InstallmentStatus"
                }
            }
        },
        "request.CreateLateFeeRequest": {
            "type": "object",
            "required": [
                "amount",
                "credit_account_id"
            ],
            "properties": {
                "amount": {
                    "type": "number"
                },
                "credit_account_id": {
                    "type": "integer"
                }
            }
        },
        "request.CreateLateFeeRuleRequest": {
            "type": "object",
            "required": [
                "days_overdue_max",
                "days_overdue_min",
                "fee_type",
                "fee_value",
                "name"
            ],
            "properties": {
                "days_overdue_max": {
                    "type": "integer"
                },
                "days_overdue_min": {
                    "type": "integer",
                    "minimum": 1
                },
                "establishment_id": {
                    "description": "Optional, if rule is for specific establishment",
                    "type": "integer"
                },
                "fee_type": {
                    "$ref": "#/definitions/enums.FeeType"
                },
                "fee_value": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "request.CreateProductRequest": {
            "type": "object",
            "required": [
                "category",
                "description",
                "establishment_id",
                "name",
                "price",
                "stock"
            ],
            "properties": {
                "category": {
                    "$ref": "#/definitions/entities.ProductCategory"
                },
                "description": {
                    "type": "string"
                },
                "establishment_id": {
                    "type": "integer"
                },
                "is_active": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "stock": {
                    "type": "integer",
                    "minimum": 0
                }
            }
        },
        "request.CreateTransactionRequest": {
            "type": "object",
            "required": [
                "amount",
                "credit_account_id",
                "recipient_id",
                "recipient_type",
                "transaction_type"
            ],
            "properties": {
                "amount": {
                    "type": "number"
                },
                "credit_account_id": {
                    "type": "integer"
                },
                "description": {
                    "description": "Optional",
                    "type": "string"
                },
                "recipient_id": {
                    "type": "integer"
                },
                "recipient_type": {
                    "$ref": "#/definitions/enums.RecipientType"
                },
                "transaction_type": {
                    "$ref": "#/definitions/enums.TransactionType"
                }
            }
        },
        "request.CreateUserRequest": {
            "type": "object",
            "required": [
                "email",
                "name",
                "password",
                "role"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 6
                },
                "role": {
                    "description": "Puedes usar enum si lo prefieres",
                    "type": "string",
                    "enum": [
                        "user",
                        "client",
                        "admin"
                    ]
                }
            }
        },
        "request.LoginRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "request.ResetPasswordRequest": {
            "type": "object",
            "required": [
                "current_password",
                "new_password"
            ],
            "properties": {
                "current_password": {
                    "type": "string"
                },
                "new_password": {
                    "type": "string",
                    "minLength": 6
                }
            }
        },
        "request.UpdateAdminRequest": {
            "type": "object",
            "properties": {
                "is_active": {
                    "type": "boolean"
                }
            }
        },
        "request.UpdateClientRequest": {
            "type": "object",
            "required": [
                "credit_limit",
                "email",
                "phone"
            ],
            "properties": {
                "credit_limit": {
                    "type": "number",
                    "minimum": 0
                },
                "email": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "request.UpdateCreditAccountRequest": {
            "type": "object",
            "properties": {
                "credit_limit": {
                    "type": "number"
                },
                "credit_type": {
                    "$ref": "#/definitions/enums.CreditType"
                },
                "current_balance": {
                    "description": "Added CurrentBalance field",
                    "type": "number"
                },
                "grace_period": {
                    "type": "integer",
                    "minimum": 0
                },
                "interest_rate": {
                    "type": "number"
                },
                "interest_type": {
                    "$ref": "#/definitions/enums.InterestType"
                },
                "is_blocked": {
                    "type": "boolean"
                },
                "late_fee_rule_id": {
                    "description": "Optional",
                    "type": "integer"
                },
                "monthly_due_date": {
                    "type": "integer",
                    "maximum": 31,
                    "minimum": 1
                }
            }
        },
        "request.UpdateEstablishmentRequest": {
            "type": "object",
            "required": [
                "address",
                "name",
                "phone",
                "ruc"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "ruc": {
                    "type": "string"
                }
            }
        },
        "request.UpdateInstallmentRequest": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "due_date": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/enums.InstallmentStatus"
                }
            }
        },
        "request.UpdateLateFeeRequest": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                }
            }
        },
        "request.UpdateLateFeeRuleRequest": {
            "type": "object",
            "properties": {
                "days_overdue_max": {
                    "type": "integer"
                },
                "days_overdue_min": {
                    "type": "integer",
                    "minimum": 1
                },
                "fee_type": {
                    "$ref": "#/definitions/enums.FeeType"
                },
                "fee_value": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "request.UpdateProductRequest": {
            "type": "object",
            "required": [
                "category",
                "description",
                "name",
                "price",
                "stock"
            ],
            "properties": {
                "category": {
                    "$ref": "#/definitions/entities.ProductCategory"
                },
                "description": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "stock": {
                    "type": "integer",
                    "minimum": 0
                }
            }
        },
        "request.UpdateTransactionRequest": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "description": {
                    "type": "string"
                },
                "transaction_type": {
                    "$ref": "#/definitions/enums.TransactionType"
                }
            }
        },
        "response.AdminDebtSummary": {
            "type": "object",
            "properties": {
                "client_id": {
                    "type": "integer"
                },
                "client_name": {
                    "type": "string"
                },
                "credit_type": {
                    "type": "string"
                },
                "current_balance": {
                    "type": "number"
                },
                "due_date": {
                    "description": "For short-term or next installment",
                    "type": "string"
                },
                "interest_rate": {
                    "type": "number"
                },
                "number_of_installments": {
                    "description": "Only for long-term",
                    "type": "integer"
                }
            }
        },
        "response.AdminResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "establishment": {
                    "$ref": "#/definitions/response.EstablishmentResponse"
                },
                "establishment_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "is_active": {
                    "type": "boolean"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "response.AuthResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "response.ClientResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "credit_limit": {
                    "type": "number"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_active": {
                    "type": "boolean"
                },
                "phone": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "response.CreditAccountResponse": {
            "type": "object",
            "properties": {
                "client": {
                    "$ref": "#/definitions/response.ClientResponse"
                },
                "client_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "credit_limit": {
                    "type": "number"
                },
                "credit_type": {
                    "$ref": "#/definitions/enums.CreditType"
                },
                "current_balance": {
                    "type": "number"
                },
                "establishment_id": {
                    "type": "integer"
                },
                "grace_period": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "interest_rate": {
                    "type": "number"
                },
                "interest_type": {
                    "$ref": "#/definitions/enums.InterestType"
                },
                "is_blocked": {
                    "type": "boolean"
                },
                "last_interest_accrual_date": {
                    "type": "string"
                },
                "late_fee_rule": {
                    "$ref": "#/definitions/response.LateFeeRuleResponse"
                },
                "late_fee_rule_id": {
                    "type": "integer"
                },
                "monthly_due_date": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "response.CreditRequestResponse": {
            "type": "object",
            "properties": {
                "approved_at": {
                    "type": "string"
                },
                "client_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "credit_type": {
                    "$ref": "#/definitions/enums.CreditType"
                },
                "establishment_id": {
                    "type": "integer"
                },
                "grace_period": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "interest_type": {
                    "$ref": "#/definitions/enums.InterestType"
                },
                "monthly_due_date": {
                    "type": "integer"
                },
                "rejected_at": {
                    "type": "string"
                },
                "requested_credit_limit": {
                    "type": "number"
                },
                "status": {
                    "$ref": "#/definitions/entities.CreditRequestStatus"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "response.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "response.EstablishmentResponse": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "admin": {
                    "$ref": "#/definitions/response.AdminResponse"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_active": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "products": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.ProductResponse"
                    }
                },
                "ruc": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "response.InstallmentResponse": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "credit_account_id": {
                    "type": "integer"
                },
                "due_date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "status": {
                    "$ref": "#/definitions/enums.InstallmentStatus"
                }
            }
        },
        "response.LateFeeResponse": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "applied_date": {
                    "type": "string"
                },
                "credit_account_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "response.LateFeeRuleResponse": {
            "type": "object",
            "properties": {
                "days_overdue_max": {
                    "type": "integer"
                },
                "days_overdue_min": {
                    "type": "integer"
                },
                "establishment_id": {
                    "type": "integer"
                },
                "fee_type": {
                    "$ref": "#/definitions/enums.FeeType"
                },
                "fee_value": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "response.ProductResponse": {
            "type": "object",
            "properties": {
                "category": {
                    "$ref": "#/definitions/entities.ProductCategory"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "establishment": {
                    "$ref": "#/definitions/response.EstablishmentResponse"
                },
                "id": {
                    "type": "integer"
                },
                "is_active": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "stock": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "response.TransactionResponse": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "created_at": {
                    "type": "string"
                },
                "credit_account_id": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "transaction_type": {
                    "$ref": "#/definitions/enums.TransactionType"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Final Assignment Finance API Rest",
	Description:      "API for managing finances in small businesses.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
